{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["PageContainer","styled","div","Tag","li","ForwardSlash","span","TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","sort","a","b","totalCount","map","tag","key","fieldValue","to","kebabCase","pageQuery"],"mappings":"6PAaMA,EAAgBC,IAAOC,IAAV,sEAAGD,CAAH,2BAIbE,EAAMF,IAAOG,GAAV,4DAAGH,CAAH,4DAMHI,EAAeJ,IAAOK,KAAV,qEAAGL,CAAH,oBAqDHM,UAjDE,SAAC,GAAD,QACfC,KACsBC,EAFP,EAEbC,kBAAoBD,MAEHE,EAJJ,EAGbC,KACEC,aAAeF,MAJJ,OAQf,kBAAC,IAAD,KACE,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAQW,MAAOA,IACf,6BACE,oCACA,4BACGF,EACEK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,WAAaF,EAAEE,cAChCC,KAAI,SAAAC,GAAG,OACN,kBAAChB,EAAD,CAAKiB,IAAKD,EAAIE,YACZ,kBAAC,OAAD,CAAMC,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,KACLF,EAAIF,WAAa,GAAjB,IAA0BE,EAAIF,WAAeE,EAAIF,WAClD,kBAACZ,EAAD,UACCc,EAAIE,qBA8BhB,IAAMG,EAAS","file":"component---src-pages-tags-js-e8c8ea20e0535a17efa5.js","sourcesContent":["import React from 'react'\n// import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n// Utilities\nimport kebabCase from 'lodash/kebabcase'\n\n// Components\nimport Helmet from 'react-helmet'\nimport {graphql, Link} from 'gatsby'\n\nimport Layout from '../components/layout'\n\nconst PageContainer = styled.div`\n  margin: 30px 0 60px 0;\n`\n\nconst Tag = styled.li`\n  list-style-type: none;\n  margin-left: 0;\n  margin-bottom: 30px;\n`\n\nconst ForwardSlash = styled.span`\n  margin: 0 10px;\n`\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: {group},\n    site: {\n      siteMetadata: {title},\n    },\n  },\n}) => (\n  <Layout>\n    <PageContainer>\n      <Helmet title={title} />\n      <div>\n        <h2>Tags</h2>\n        <ul>\n          {group\n            .sort((a, b) => b.totalCount - a.totalCount)\n            .map(tag => (\n              <Tag key={tag.fieldValue}>\n                <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                  {tag.totalCount < 10 ? `0${tag.totalCount}` : tag.totalCount}\n                  <ForwardSlash>/</ForwardSlash>\n                  {tag.fieldValue}\n                </Link>\n              </Tag>\n            ))}\n        </ul>\n      </div>\n    </PageContainer>\n  </Layout>\n)\n\n// TagsPage.propTypes = {\n//   data: PropTypes.shape({\n//     allMarkdownRemark: PropTypes.shape({\n//       group: PropTypes.arrayOf(\n//         PropTypes.shape({\n//           fieldValue: PropTypes.string.isRequired,\n//           totalCount: PropTypes.number.isRequired,\n//         }).isRequired,\n//       ),\n//     }),\n//     site: PropTypes.shape({\n//       siteMetadata: PropTypes.shape({\n//         title: PropTypes.string.isRequired,\n//       }),\n//     }),\n//   }),\n// };\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query TagsQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      filter: {frontmatter: {published: {ne: false}}}\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}